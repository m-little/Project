doctype 5
html.all(style="background-image:url('/images/bg1.png');")

	include ../header

	- if (global.session.logged_in != 0)
		div(style="position:fixed; left:-68px; top:144px; background-color:#243EA7; border-radius:.4em; z-index:8;")
			div(id="share_button", title="Share this recipe with your followers.", style="border:1px solid white; padding:8px; margin:1px; padding-left:14px; padding-right:10px; border-radius:.4em; cursor:pointer; color:white;", onClick="$(this).css('cursor', 'wait'); share_recipe(); $('#share_title').animate({'padding-left': 0}, 350, function(){share_animate = 0;});")
				span(id="share_title", style="margin-right:14px;")
					| Share
				span
					| &#9733

	div.all(style="max-width:1000px; margin:auto;")
		div(style="padding-bottom:40px; background-color:white; margin-bottom:10px; border:1px solid #c2c2c2; position:relative;")

			- if (recipe.public == '0')
				div(style="float:left; clear:both; height:73px; width:86px; position:relative; top:-28px; left:-36px; margin-bottom:-140px; background-image:url('/images/private.png'); background-repeat:no-repeat; z-index:3;")

			div(id="recipe_pic_prev", style="position:relative; left:-18px; top:66px; width:24px; height:44px; margin-bottom:-46px; background-image:url('/images/prev1.png'); cursor:pointer;", title="Previous photo.", onClick="prev_picture();")
			div(id="recipe_pic_next", style="position:relative; left:19px; top:66px; float:right; width:24px; height:44px; margin-bottom:-46px; background-image:url('/images/next1.png'); cursor:pointer;", title="Next photo.", , onClick="next_picture();")

			//- Recipe Category
			div(style="position:relative; right:10px; top:1px; margin-top:-2px; font-size:28px; float:right; clear:both; width:auto; height:auto; padding-left:16px; padding-right:16px; margin-bottom:-36px; background-color:white; border-bottom-left-radius:.6em; border-bottom-right-radius:.6em; opacity:.8; filter:alpha(opacity=80); cursor:default; z-index:2;", title="Category")
				| #{recipe.category}

			//- Recipe Name
			div(style="position:relative; left:10px; top:1px; margin-top:-2px; font-size:32px; float:left; clear:both; width:auto; height:auto; padding-left:16px; padding-right:16px; margin-bottom:-36px; background-color:white; border-bottom-left-radius:.6em; border-bottom-right-radius:.6em; opacity:.8; filter:alpha(opacity=80); cursor:default; z-index:2;")
				| #{recipe.name}

			//- Image
			- if (recipe.get_picture(0).location != 'unknown.png')
				div(id="recipe_photo_div", style="width:100%; max-height:auto; min-height:160px; height:160px; overflow:hidden;")
					img(id="recipe_photo", src="/images/user_images/#{recipe.get_picture(0).location}", style="width:100%; position:relative;", alt="#{recipe.get_picture(0).caption}", title="#{recipe.get_picture(0).caption}", onLoad="refresh_picture();")
			- else
				div(id="recipe_photo_div", style="width:100%; max-height:auto; height:70px; overflow:hidden;")

			- if (recipe.get_picture(0).location != 'unknown.png')
				div(id="recipe_pic_drag", style="position:relative; right:8px; top:-24px; float:right; width:27px; height:14px; margin-bottom:-46px; background-image:url('/images/drag1.png'); cursor:s-resize; z-index:2;", title="Enlarge this photo. Double click to reset.", onClick="zoom_photo($('#recipe_pic_zoom').position());")

			//- Owner
			div(id="recipe_owner", style="position:relative; left:10px; top:-26px; font-size:16px; float:left; clear:both; width:auto; height:auto; padding:4px; padding-left:16px; padding-right:16px; background-color:white; border-top-left-radius:.6em; border-top-right-radius:.6em; opacity:.8; filter:alpha(opacity=80); cursor:default;")
				- if (global.session.logged_in && recipe.owner == global.session.user.id)
					| Owned by You
				- else
					| Owned by 
					a(href="/user/profile?u=#{recipe.owner}", style="cursor:pointer; text-decoration:none; color:black; font-weight:bold;")
						| #{recipe.owner}

			style(type="text/css")
				div.star_power{width:#{recipe.rank / 10 * 160}px; height:100%; background-color:#ffbf00; visibility:hidden;}
				div.star_outline{width:162px; height:34px; margin:auto; position:relative; top:4px; margin-bottom:-32px; background-image:url('/images/star_hollow1.png'); background-size:100% 100%; cursor:pointer;}

			//- Rating
			div(style="width:168px; height:30px; margin:auto; position:relative; left:5px; top:6px; margin-bottom:-32px; padding-bottom:3px;")
				div.star_power(id="stars_power")
			- if (!global.session.logged_in)
				div.star_outline(id="recipe_rank", title="#{Math.round(recipe.rank / 2 * 100) / 100}/5 stars (#{recipe.rank_count} ranks). Please login to rate.", style="cursor:default")
			- else if (global.session.logged_in && recipe.owner == global.session.user.id)
				div.star_outline(id="recipe_rank", title="#{Math.round(recipe.rank / 2 * 100) / 100}/5 stars (#{recipe.rank_count} ranks).", style="cursor:default")
			- else
				- var text = (global.session.user_recipe_rank == -1 ? "" : " Your rank: " + (global.session.user_recipe_rank / 2) + " stars.");
				div.star_outline(id="recipe_rank", title="#{Math.round(recipe.rank / 2 * 100) / 100}/5 stars (#{recipe.rank_count} ranks).#{text}", onClick="show_rank();")

			div(id="recipe_rank_text", style="float:right; position:relative; top:6px; right:10px; font-size:12px; color:gray;")
				| #{Math.round(recipe.rank / 2 * 100) / 100}/5 stars (#{recipe.rank_count} ranks)
			div(style="float:right; clear:right; position:relative; top:8px; right:10px; font-size:12px; color:gray;")
				| Created on #{recipe.date_added.toDateString()}

		// Ingredients
		div(style="font-size:16px; height:auto; padding:10px; border:1px solid #c2c2c2; margin-bottom:10px; background-color:white; min-height:186px; overflow:auto;")

			div(style="border-radius:.6em; float:right; position:relative; padding:6px; margin:6px;")
				div(style="font-size:14px; float:right; clear:both; text-align:center; width:100%;")
					span(id="orig_serving_size", style="position:absolute; top:-8px; text-align:center; width:72px; font-size:12px; color:gray; visibility:hidden;")
						| Original
					| Serving Size
				div(style="font-size:18px; float:right; clear:both; text-align:center; width:100%; margin-bottom:6px;")
					| #{recipe.serving_size}

				div(style="font-size:14px; float:right; clear:both; border-top:1px dashed gray; width:100%; text-align:center; margin-top:4px; padding-top:10px;")
					| Prep Time
				div(style="font-size:18px; float:right; clear:both; text-align:center; width:100%; margin-bottom:6px;")
					| #{recipe.prep_time}

				div(style="font-size:14px; float:right; clear:both; border-top:1px dashed gray; width:100%; text-align:center; margin-top:4px; padding-top:10px;")
					| Ready in
				div(style="font-size:18px; float:right; clear:both; text-align:center; width:100%;")
					| #{recipe.ready_time}

			div(style="font-size:20px; background-color:white; width:100px; padding:2px;")
				| Ingredients
			div(style="margin-left:10px; overflow:auto;")
				- for (var i = 0; i < (recipe.ingredients).length; i++)
					div(style="float:left; clear:both; overflow:auto; margin-bottom:4px; margin-top:4px;")
						div(id="ingredient_amount#{i}", style="padding-left:10px; padding-left:10px; padding-right:2px; text-align:right; visibility:hidden; min-width:60px; float:left;")
							| #{recipe.ingredients[i].amount} 
						div(id="ingredient_unit_name#{i}", style="padding-right:4px; float:left; margin-left:6px;")
							|  #{recipe.ingredients[i].unit_name}
						span(style="margin-left:6px;")
							b(style="cursor:pointer;")
								a(id="ingr_num#{recipe.ingredients[i].id}", href="", style="color:black; text-decoration:none;")
									| #{recipe.ingredients[i].name}
			div(id="ingr_alter_button", style="width:auto; float:left; clear:both; overflow:auto; padding:4px; font-size:10px; cursor:pointer;", onClick="show_ingr_alter();")
				| &#9660; 
				span(style="color:gray;")
					| Change
			div(id="ingr_alter", style="clear:both;")

		//- Directions
		div(style="font-size:16px; height:auto; padding:10px; border:1px solid #c2c2c2; margin-bottom:10px; background-color:white;")
			div(style="font-size:20px; background-color:white; width:100px; padding:2px;")
				| Directions
			div(style="padding-left:10px;")
				- for direction in recipe.directions.split('\n')
					div(style="margin-top:6px; min-height:19px;")
						| #{direction}

		style(type="text/css")
			div.comment{padding:5px; padding-left:10px; margin:15px; margin-bottom:20px; margin-top:25px; border:1px solid gray; border-radius:.3em; height:auto;}

		//- Comments
		div(style="font-size:16px; height:auto; padding:10px; border:1px solid #c2c2c2; background-color:white;")
			div(style="font-size:20px; background-color:white; width:100px; padding:2px;")
				| Comments

			div(style="padding:5px; padding-top:1px; padding-bottom:1px; border-radius:.6em;", id="comments")
				- for(var i = -1; i < recipe.flat_comments.length; i++)
					- var comment
					- var hidden
					- if (i == -1)
						- comment = {indent: 0, id: 0, owner:'none', date_added: new Date(), date_edited: new Date(), picture: {location:'unknown.png', caption:''}, content: '', seen: 1};
						- hidden = 'hidden';
					- else
						- comment = recipe.flat_comments[i];
						- hidden = 'visible';
					- var comment_color = '';
					- if (recipe.owner == comment.owner.id)
						- comment_color = 'e8f0ff';
					- else
						- comment_color = 'ffffff';

					div.comment(style="margin-left:#{comment.indent * 50 + 30}px; background-color:##{comment_color}; visibility:#{hidden};", id="comment_div#{comment.id}", onmouseout="$('#reply#{comment.id}').hide(); $('#edit#{comment.id}').hide();", onmouseover="if (show_buttons) {$('#reply#{comment.id}').show(); $('#edit#{comment.id}').show();}")

						//- User stuff
						div(id="comment_up", style="width:13px; height:9px; background-image:url('/images/up1.png'); background-size:100% 100%; z-index:2; position:relative; left:50px; top:-14px; margin-bottom:-16px; background-color:##{comment_color};")

						div(style="position:relative; top:-25px; margin:-6px; margin-left:-10px; margin-bottom:-36px; padding:5px;")
							
							div(id="comment_image_box", style="padding:5px; margin-right:10px; text-align:center; position:relative; left:-32px; top:14px; margin-bottom:-24px; margin-right:-24px; border:1px solid gray; border-radius:.3em; width:64px; background-color:##{comment_color};")
								div(style="width:64px; height:64px; overflow:hidden;")
									img(id="comment_image", style="width:100%;", src="/images/user_images/#{comment.picture.location}", alt="#{comment.picture.caption}", title="#{comment.picture.caption}")

						div(style="height:20px; margin-left:45px; margin-right:10px; position:relative; top:-20px; margin-bottom:-20px;")
							div(id="comment_owner", style="color:gray; width:10px; overflow:show;")
								- if (global.session.logged_in && comment.owner.id == global.session.user.id)
									a(href="/user/profile?u=#{comment.owner.id}", style="margin:0px; padding:0px; cursor:pointer; text-decoration:none; color:gray;")
										| You
									span(style="font-size:10px; margin-left:5px; vertical-align:middle;")
										| #{comment.owner.points}
								- else
									a(href="/user/profile?u=#{comment.owner.id}", style="margin:0px; padding:0px; cursor:pointer; text-decoration:none; color:gray; white-space:nowrap;")
										| #{comment.owner.id}
									span(style="font-size:10px; margin-left:5px; vertical-align:middle;")
										| #{comment.owner.points}

							div(id="comment_date_added", style="font-size:12px; color:gray; float:right; position:relative; top:-16px;")
								| Posted #{comment.date_added.toDateString()} at 
								- if (comment.date_added.getHours() > 12)
									| #{comment.date_added.getHours() - 12}
								- else
									| #{comment.date_added.getHours()}
								| :
								- if (comment.date_added.getMinutes() < 10)
									| 0
								| #{comment.date_added.getMinutes()}:
								- if (comment.date_added.getSeconds() < 10)
									| 0
								| #{comment.date_added.getSeconds()}
								- if (comment.date_added.getHours() > 12)
									|  pm
								- else
									|  am

							- if (comment.date_edited.getFullYear() != 1969)
								div(id="comment_date_edited", style="font-size:12px; color:gray; float:right; position:relative; top:-16px; right:20px; margin-left:25px; visibility:#{hidden};")
									| Edited #{comment.date_edited.toDateString()} at 
									- if (comment.date_edited.getHours() > 12)
										| #{comment.date_edited.getHours() - 12}
									- else
										| #{comment.date_edited.getHours()}
									| :
									- if (comment.date_edited.getMinutes() < 10)
										| 0
									| #{comment.date_edited.getMinutes()}:
									- if (comment.date_edited.getSeconds() < 10)
										| 0
									| #{comment.date_edited.getSeconds()}
									- if (comment.date_edited.getHours() > 12)
										|  pm
									- else
										|  am
							- else if (global.session.logged_in && comment.owner.id == global.session.user.id)
								div(id="comment_date_edited", style="font-size:12px; color:gray; float:right; position:relative; top:-16px; right:20px; margin-left:25px; visibility:#{hidden};")

							if (global.session.logged_in && comment.owner.id != global.session.user.id && global.session.user.id == recipe.owner && !comment.seen)
								div(id="comment_new_note", style="float:right; font-size:12px; color:green; margin-bottom:-16px; position:relative; top:-16px; right:10px;")
									| New

						div(id="comment_context", style="margin-right:5px; margin-left:40px; border:1px solid border-top:1px solid #dedede; border-radius:.2em; padding:4px; padding-top:10px; padding-left:5px; padding-right:5px;")
							- for piece in comment.content.split('\n')
								div(style="margin-top:2px; min-height:19px;")
									| #{piece}

						- if (global.session.logged_in)
							- if (global.session.user.id != comment.owner.id)
								div(style="background-image:url('/images/reply1.png'); width:59px; height:24px; margin-left:auto; cursor:pointer; position:relative; top:-1px; margin-bottom:-24px; z-index:1;", title="Reply to #{comment.owner.id}'s comment.", id="reply#{comment.id}", onClick="reply_comment('#comment_div#{comment.id}');")
							- else
								div(style="background-image:url('/images/edit1.png'); width:59px; height:24px; margin-left:auto; cursor:pointer; position:relative; top:-1px; margin-bottom:-24px; z-index:1;", title="Edit your comment.", id="edit#{comment.id}", onClick="edit_comment('#comment_div#{comment.id}');")

				- if (global.session.logged_in)
					// New comment box (hides on load)			
					- var comment_color = '';
					- if (recipe.owner == global.session.user.id)
						- comment_color = 'e8f0ff';
					- else
						- comment_color = 'ffffff';
					div.comment(style="margin-left:30px; background-color:##{comment_color}; visibility:hidden;", id="new_comment")

						//- User stuff
						div(style="padding:5px; margin-right:10px; text-align:center; position:relative; left:-36px; top:-12px; margin-bottom:-24px; margin-right:-24px; border:1px solid gray; border-radius:.6em; width:64px; background-color:##{comment_color};")
								div(style="width:64px; height:64px; overflow:hidden;")
									img(style="width:100%;", src="/images/user_images/#{global.session.user.picture.location}", alt="#{global.session.user.picture.caption}", title="#{global.session.user.picture.caption}")

						div(style="font-size:12px; color:gray; position:relative; left:46px; top:-50px; margin-bottom:-16px; width:260px;")

						div(style="color:gray; position:relative; top:-50px; left:50px; margin-bottom:-50px; width:200px;")
							| What will you say?

						div(style="margin:0px; padding:0px; overflow:auto;")

							div(style="margin-left:45px; margin-right:15px; border-top:1px solid #dedede; border-radius:.2em; padding:4px; padding-left:5px; padding-right:5px;")
								textarea.input_text(style="width:100%; max-width:100%;", type="text", name="comment_content", id="new_comment_text")

							input(id="new_comment_target_id", type="hidden", name="reply_comment", value="0")
							input(id="new_comment_recipe_id", type="hidden", name="recipe_id", value="#{recipe.id}")

							button.button1b(id="new_comment_post", title="Click here to post your comment.", onClick="send_comment();", style="float:right; margin-right:10px;")
								| Post

							button.button1r(id="new_comment_cancel", title="Click here to cancel your comment.", style="float:right;")
								| Cancel

					// New reply box (hides on load)
					- var comment_color = '';			
					- if (recipe.owner == global.session.user.id)
						- comment_color = 'e8f0ff';
					- else
						- comment_color = 'ffffff';
					div.comment(style="margin-left:30px; background-color:##{comment_color}; visibility:hidden;", id="new_reply")

						//- User stuff
						div(style="padding:5px; margin-right:10px; text-align:center; position:relative; left:-36px; top:-12px; margin-bottom:-24px; margin-right:-24px; border:1px solid gray; border-radius:.6em; width:64px; background-color:##{comment_color};")
								div(style="width:64px; height:64px; overflow:hidden;")
									img(style="width:100%;", src="/images/user_images/#{global.session.user.picture.location}", alt="#{global.session.user.picture.caption}", title="#{global.session.user.picture.caption}")

						div(style="color:gray; position:relative; top:-50px; left:50px; margin-bottom:-50px; width:200px;")
							| What will you say?

						div(style="margin:0px; padding:0px; overflow:auto;")

							div(style="margin-left:45px; margin-right:15px; border-top:1px solid #dedede; border-radius:.2em; padding:4px; padding-left:5px; padding-right:5px;")
								textarea.input_text(style="width:100%; max-width:100%;", type="text", name="comment_content", id="new_reply_text")

							input(id="new_reply_target_id", type="hidden", name="reply_comment")
							input(id="new_reply_type", type="hidden", name="reply_type")
							input(id="new_reply_recipe_id", type="hidden", name="recipe_id", value="#{recipe.id}")

							button.button1b(id="new_reply_post", title="Click here to post your reply.", onClick="send_reply();", style="float:right; margin-right:10px;")
								| Post

							button.button1r(id="new_reply_cancel", title="Click here to cancel your reply.", onClick="", style="float:right;")
								| Cancel

		- if (global.session.logged_in)
			div(style="background-image:url('/images/comment1.png'); width:120px; height:26px; margin:auto; cursor:pointer; position:relative; top:-5px;", title="Comment on this recipe.", id="new_comment_button")

	script(src="/jquery.js")
	script
		var hide_rank_submit = true;
		var resizing_image = false;
		var image_index = 0;
		var images = [#{recipe.pictures_string().toString()}];
		var ingredients = [#{recipe.ingredients_string().toString()}];
		var show_buttons = true;
		var new_rank = 0;
		var recipe_my_rank = #{global.session.user_recipe_rank};
		var servings = #{recipe.serving_size.match(/[0-9]+/)};
		var new_servings = servings;
		var share_animate = 0;
		$(window).load(function()
		{
			$('#stars_power').css('visibility', 'visible'); // this keeps the background from appearing before the stars.
		});
		$(document).ready(function()
		{
			$("#new_comment").hide();
			$("#new_comment").css('visibility', 'visible');
			$("#new_reply").hide();
			$("#new_reply").css('visibility', 'visible');
			$("#comment_div0").hide();
			$("[id^=reply]").hide();
			$("[id^=edit]").hide();
			// Setup correct ingredient fractions
			$("[id^=ingredient_amount]").each(function(){
				$(this).text(fix_num($(this).attr('id').match(/[0-9]+/), 1));
				$(this).css('visibility', 'visible');
			});
			//
			$("#share_button").hover(function(){
				if (share_animate == 0)
				{
					$("#share_title").animate({'padding-left': 60}, 350, function(){if (share_animate == 3) $("#share_title").animate({'padding-left': 0}, 350, function(){share_animate = 0;}); else share_animate = 2;});
					share_animate = 1;
				}
			}, function(){
				if (share_animate == 2)
					$("#share_title").animate({'padding-left': 0}, 350, function(){share_animate = 0;});
				else if (share_animate == 1)
					share_animate = 3;
			});
			//
			$("#new_comment_button").click(function(){
				$("#new_comment_button").hide();
				$("#new_comment_text").val('');
				$("#new_comment").slideDown();
				$("#new_comment_text").focus();
				show_buttons = false;
				$("html, body").animate({ scrollTop: $(document).height() + $("#new_comment").position().top }, "slow");
			});
			//
			$("#new_comment_cancel").click(function(){
				$("#new_comment").slideUp();
				$("#new_comment_button").show();
				show_buttons = true;
			});
			//
			$("#new_reply_cancel").click(function(){
				hide_new_reply();
			});
			//
			$("#recipe_pic_drag").mousedown(function(e)
			{
				e.preventDefault();
				resizing_image = true;
				$(document).mousemove(function(e){
					if (resizing_image)
					{
						$("#recipe_photo_div").css('height', e.pageY-54);
						if ($("#recipe_photo_div").height() > $("#recipe_photo").height())
							$("#recipe_photo_div").css('height', $("#recipe_photo").height());
					}
				});
			});
			//
			$("#recipe_pic_drag").dblclick(function()
			{
				$("#recipe_photo_div").css('height', $("#recipe_photo_div").css('min-height'));
			});
			//
			$(document).mouseup(function(e){
				resizing_image = false;
				if (hide_rank_submit)
				{
					var div = $("#rank_submit");
					if (div.is(':visible') && div.has(e.target).length === 0)
						$("#rank_submit").fadeOut(function(){$("#rank_submit").remove();});
				}
				hide_rank_submit = true;
			});
			//
			if (images.length <= 1)
			{
				$("#recipe_pic_prev").hide();
				$("#recipe_pic_next").hide();
			}
			// Ingredient hover stuff
			$("[id^=ingr_num]").hover(function(e){
				var ingr_num = event.target.id.match(/[0-9]+/g);
				var index = 0;
				for (var i = 0; i < ingredients.length; i++)
				{
					if (ingredients[i].id == ingr_num)
						index = i;
				}
				$("<div></div>").attr({id:'ingr_float', style:'float:left; position:absolute; left:'+(e.pageX + 16)+'px; top:'+e.pageY+'px; min-width:180px; background-color:white; border:1px solid #c2c2c2; z-index:2;'}).appendTo('body');
				$("<div></div>").attr({id:'ingr_float_image_div', style: "overflow:hidden; width:48px; height:48px; margin:4px; float:left;"}).appendTo('#ingr_float');
				$("<img>").attr({src: "/images/user_images/" + ingredients[index].picture_location, style: "width:100%;"}).appendTo("#ingr_float_image_div");
				$("<div>" + ingredients[index].name + "</div>").attr({style: "white-space:nowrap; float:left; margin:4px; margin-right:10px;"}).appendTo("#ingr_float");
				$("<div>" + ingredients[index].use_count + "</div>").attr({style: "color:blue; font-size:10px; float:right; clear:both; margin:4px; margin-right:14px; margin-top:-18px; position:relative; top:-14px;"}).appendTo("#ingr_float");
				$("<div>Click to learn more.</div>").attr({style: "white-space:nowrap; color:gray; font-size:12px; float:right; clear:both; margin:4px; margin-right:10px; margin-top:-18px;"}).appendTo("#ingr_float");
			}, function(e){
				$("#ingr_float").remove();
			});
			$("[id^=ingr]").mousemove(function(e){
				$("#ingr_float").css({left: (e.pageX + 16) + 'px', top: e.pageY + 'px'});
			});
		});
		//
		function reply_comment(comment)
		{ 
			// show new reply
			comment = $(comment);
			show_buttons = false;
			var margin = comment.css('margin-left').match(/[0-9]+/g);
			var parent = comment;
			$("#new_reply").css('margin-left', (parseInt(parent.css('margin-left')) + 50).toString() + 'px');
			var comments = $("[id^=comment_div]");
			var flag = false;
			for (var i = 0; i < comments.length; i++)
			{
				if (!flag && comments[i].id == parent.attr('id'))
				{
					flag = true;
					continue;
				}
				if (!flag)
					continue;
				if (parseInt($('#' + comments[i].id).css('margin-left').match(/[0-9]+/g)) > margin)
				{
					parent = $('#' + comments[i].id);
				}
				else
					break;
			}
			$("#new_reply").insertAfter(parent);
			$("#new_reply_post").text('Post');
			$("#new_reply_type").val('post');
			$("#new_reply").slideDown();
			$("#new_reply_text").val('');
			$("#new_reply_text").focus();
			$("#new_reply_target_id").val(comment.attr('id').match(/[0-9]+/g));
			$("#new_comment_button").hide();
		}
		function edit_comment(comment)
		{ 
			// edit the comment
			comment = $(comment);
			show_buttons = false;
			$("#new_reply").insertAfter(comment);
			comment.hide();
			var content_list = comment.find('#comment_context').children('div');
			var content = '';
			for (var i = 0; i < content_list.length; i++)
			{
				if (i != 0) content += '\n';
				content += $(content_list[i]).text();
			}
			$("#new_reply_text").val(content);
			$("#new_reply_post").text('Update');
			$("#new_reply_type").val('edit');
			$("#new_reply_target_id").val(comment.attr('id').match(/[0-9]+/g));
			$("#new_reply").css('margin-left', $(comment).css('margin-left'));
			$("#new_reply").show();
			$("#new_reply_text").focus();
		}
		function prev_picture()
		{
			$("#recipe_photo").fadeOut(200, function()
				{
					image_index -= 1;
					if (image_index < 0)
						image_index = images.length - 1;
					$("#recipe_photo").attr('src', "/images/user_images/" + images[image_index].location);
					$("#recipe_photo").attr('title', images[image_index].caption);
					$("#recipe_photo").fadeIn(200);
					// refresh_picture gets called when the image has loaded... see image declaration above
				});
		}
		function next_picture()
		{
			$("#recipe_photo").fadeOut(200, function()
				{
					image_index += 1;
					if (image_index >= images.length)
						image_index = 0;
					$("#recipe_photo").attr('src', "/images/user_images/" + images[image_index].location);
					$("#recipe_photo").attr('title', images[image_index].caption);
					$("#recipe_photo").fadeIn(200);
					// refresh_picture gets called when the image has loaded... see image declaration above
				});
		}
		function refresh_picture()
		{
			if ($("#recipe_photo_div").height() > $("#recipe_photo").height())
				$("#recipe_photo_div").css('height', $("#recipe_photo").height());
		}
		function hide_new_reply()
		{
			if ($("#new_reply_type").val() == 'edit')
			{
				$("#comment_div" + $("#new_reply_target_id").val()).show();
				$("#new_reply").hide();
			}
			else
				$("#new_reply").slideUp();
			show_buttons = true;
			$("#new_comment_button").show();
		}
		function send_reply()
		{
			if ($("#new_reply_type").val() == 'post')
				$.ajax({
					type: 'POST',
					url: '/recipe/comment_on',
					data: {recipe_id: "#{recipe.id}", reply_comment: $("#new_reply_target_id").val(), comment_content: $("#new_reply_text").val()}, 
					dataType: 'json',
					success: new_reply});
			else if ($("#new_reply_type").val() == 'edit')
				$.ajax({
					type: 'POST',
					url: '/recipe/edit_comment',
					data: {edit_comment: $("#new_reply_target_id").val(), comment_content: $("#new_reply_text").val()}, 
					dataType: 'json',
					success: new_edit});
		}
		function send_comment()
		{
			$.ajax({
				type: 'POST',
				url: '/recipe/comment_on',
				data: {recipe_id: "#{recipe.id}", reply_comment: 0, comment_content: $("#new_comment_text").val()}, 
				dataType: 'json',
				success: new_comment});
		}
		function new_reply(data, success)
		{
			// Clone other comments to keep formatting
			var new_comment = $("#comment_div" + $("#new_reply_target_id").val()).clone();
			new_comment.attr({id: "comment_div" + data.new_id, onmouseout: "$('#reply" + data.new_id + "').hide(); $('#edit" + data.new_id + "').hide();", onmouseover:"if (show_buttons) {$('#reply" + data.new_id + "').show(); $('#edit" + data.new_id + "').show();}"});
			new_comment.css('margin-left', $("#new_reply").css('margin-left'));
			// find parts and fix their text
			new_comment.find('#comment_owner').text('You');
			new_comment.find('#comment_date_added').text('Posted ' + data.date);
			var new_edit_button = new_comment.find("[id^=reply]");
			new_edit_button.attr({id: 'edit' + data.new_id, title: 'Edit your comment.', onClick: "edit_comment('#comment_div" + data.new_id + "');"});
			new_edit_button.css('background-image', "url('/images/edit1.png')");
			new_comment.find("#comment_new_note").remove();
			new_comment.find("#comment_date_edited").text('');
			var comment_context = new_comment.find('#comment_context');
			// remove the new comment's content
			comment_context.empty();
			var lines = $("#new_reply_text").val().split('\n');
			for (var i = 0; i < lines.length; i++)
			{
				comment_context.append('<div>' + lines[i] + '</div>');
			}
			// Update the image
			var image = new_comment.find("#comment_image");
			image.attr({src: "/images/user_images/" + data.user_pic.location, alt: data.user_pic.caption, title: data.user_pic.caption});
			if ($("#recipe_owner").text() == "Owned by You")
			{
				new_comment.css('background-color', '#e8f0ff');
				new_comment.find("#comment_image_box").css('background-color', '#e8f0ff');
				new_comment.find("#comment_up").css('background-color', '#e8f0ff');
			}
			new_comment.insertBefore($("#new_reply"));
			new_comment.slideDown();
			show_buttons = true;
			$("#new_comment_button").show();
			$("#new_reply").hide();
		}
		function new_edit(data, success)
		{
			show_buttons = true;
			var comment = $("#comment_div" + $("#new_reply_target_id").val());
			var comment_context = comment.find('#comment_context');
			comment.find("#comment_date_edited").text('Edited ' + data.date);
			comment.find("#comment_date_edited").css('visibility', 'visible');
			comment_context.empty();
			var lines = $("#new_reply_text").val().split('\n');
			for (var i = 0; i < lines.length; i++)
			{
				comment_context.append('<div>' + lines[i] + '</div>');
			}
			comment.show();
			$("#new_comment_button").show();
			$("#new_reply").hide();
		}
		function new_comment(data, success)
		{
			// Clone other comments to keep formatting
			var new_comment = $("#comment_div0").clone();
			new_comment.attr({id: "comment_div" + data.new_id});
			new_comment.css('visibility', 'visible');
			new_comment.attr({id: "comment_div" + data.new_id, onmouseout: "$('#reply" + data.new_id + "').hide(); $('#edit" + data.new_id + "').hide();", onmouseover:"if (show_buttons) {$('#reply" + data.new_id + "').show(); $('#edit" + data.new_id + "').show();}"});
			// find parts and fix their text
			new_comment.find('#comment_owner').text('You');
			new_comment.find('#comment_date_added').text('Posted ' + data.date);
			var new_edit_button = new_comment.find("[id^=reply]");
			new_edit_button.attr({id: 'edit' + data.new_id, title: 'Edit your comment.', onClick: "edit_comment('#comment_div" + data.new_id + "');"});
			new_edit_button.css('background-image', "url('/images/edit1.png')");
			new_comment.find("#comment_new_note").remove();
			var comment_context = new_comment.find('#comment_context');
			// remove the new comment's content
			comment_context.empty();
			var lines = $("#new_comment_text").val().split('\n');
			for (var i = 0; i < lines.length; i++)
			{
				comment_context.append('<div>' + lines[i] + '</div>');
			}
			// Update the image
			var image = new_comment.find("#comment_image");
			image.attr({src: "/images/user_images/" + data.user_pic.location, alt: data.user_pic.caption, title: data.user_pic.caption});
			if ($("#recipe_owner").text() == "Owned by You")
			{
				new_comment.css('background-color', '#e8f0ff');
				new_comment.find("#comment_image_box").css('background-color', '#e8f0ff');
				new_comment.find("#comment_up").css('background-color', '#e8f0ff');
			}
			$("#new_comment").hide();
			new_comment.insertBefore('#new_comment');
			new_comment.show();
			$("#new_comment_button").show();
			show_buttons = true;
		}
		function show_rank()
		{
			if ($("#rank_submit").attr('id') == undefined)
			{
				var container = $("<div></div>").attr({id: "rank_submit", style: "width:210px; height:90px; position:absolute; top:" + ($("#recipe_rank").position().top + 40) + "px; left:50%; margin-left:-105px; background-color:white; border-radius:.6em; border:1px solid #c2c2c2;", onmousedown: 'hide_rank_submit = false;'});
				container.appendTo('body');
				var stars = $("<div></div>").attr({id: "new_rank_stars",class: "star_outline", style: "margin-top:4px; width:190px; height:38px; background-repeat:no-repeat;", onClick: "submit_rank(new_rank);"});
				stars.appendTo(container);
				var your_back = $("<div></div>").attr({id: "old_rank_power", class: "star_power", style: "height:35px; width:0px; margin-left:15px; margin-bottom:-35px; background-color:#00a6ff; visibility:visible;"});
				your_back.appendTo(container);
				var back = $("<div></div>").attr({id: "new_rank_power", class: "star_power", style: "height:35px; margin-left:15px; visibility:visible;"});
				back.appendTo(container);
				var details = $("<div>Rank This Recipe</div>").attr({style: "color: gray; font-size:24px; text-align:center; margin-top:8px;"});
				details.appendTo(container);
				if (recipe_my_rank != -1)
				{
					var width = 184 * (recipe_my_rank / 10);
					if (recipe_my_rank < 6)
						width -= 2;
					your_back.css('width', width);
				}
				$(document).ready(function(){
					$("#new_rank_stars").mousemove(function(e){
						power = $("#new_rank_power");
						new_rank = (e.pageX - power.offset().left) / 184;
						new_rank = Math.round(new_rank * 10) / 10;
						var width = 184 * new_rank;
						if (new_rank < .6)
							width -= 2;
						power.css('width', width);
					});
				});
			}
		}
		function submit_rank(new_rank)
		{
			$.ajax({
				type: 'POST',
				url: '/recipe/set_rank',
				data: {recipe_id: "#{recipe.id}", rank: new_rank * 10}, 
				dataType: 'json',
				success: function(data)
				{
					recipe_my_rank = data.rank;
					var width = 184 * (recipe_my_rank / 10);
					if (recipe_my_rank < 6)
						width -= 2;
					$("#old_rank_power").css('width', width);
					$("#stars_power").css('width', data.rank_avg / 10 * 160);
					$("#recipe_rank").attr('title', Math.round(data.rank_avg / 2 * 100) / 100 + "/5 stars (" + data.rank_count + " ranks). Your rank: " + (data.rank / 2) + " stars.");
					$("#recipe_rank_text").text(Math.round(data.rank_avg / 2 * 100) / 100 + "/5 stars (" + data.rank_count + " ranks).");
				}
				});
		}
		function FindGCF(a, b)
		{
		while (b != 0) 
		{
			var t = b;
			b = a % b;
			a = t;
		}
		return a;
		}
		function show_ingr_alter()
		{
			$("#ingr_alter_button").attr('onClick', 'hide_ingr_alter();');
			$("#ingr_alter_button").html('&#9650; <span style="color:gray">Cancel</span>');
			$("<div>Desired Serving Size:</div>").attr({id: 'ingr_alter_div', style: "visiblitly:hidden; width:390px; padding-top:10px; margin:auto;"}).appendTo($('#ingr_alter'));
			$("<input></input>").attr({id: "ingr_alter_value", type: 'number', min: '0', max: '200', value: new_servings, class: 'input_text', style: "height:15px; margin-left:10px;"}).appendTo($("#ingr_alter_div"));
			$("<button>Update</button>").attr({id: "ingr_alter_submit", class: 'button1b', style: "margin-left:10px;", onClick: "update_ingrs(0);"}).appendTo($("#ingr_alter_div"));
			$("<button>Reset</button>").attr({class: 'button1b', style: "margin-left:10px;", onClick: "update_ingrs(1); $('#ingr_alter_value').val(servings);"}).appendTo($("#ingr_alter_div"));
			$("#ingr_alter_div").hide();
			$("#ingr_alter_div").css('visibility', 'visible');
			$("#ingr_alter_div").slideDown();
		}
		function hide_ingr_alter()
		{
			$("#ingr_alter_button").attr('onClick', 'show_ingr_alter();');
			$("#ingr_alter_button").html('&#9660; <span style="color:gray">Change</span>');
			$("#ingr_alter_div").slideUp(function(){$("#ingr_alter_div").remove();});
		}
		function fix_num(ingr, m)
		{
			var number = ingredients[ingr].amount * m;
			if (number == 0) return '-';
			number = shoot_for_1(ingr, number);
			return prettify_fraction(number);
		}
		function prettify_fraction(number)
		{
			var integer = Math.floor(number);
			var dec = (number - integer) * 100;
			var gcf = FindGCF(100, dec);
			var num = dec / gcf;
			var den = 100 / gcf;
			if (Math.round(dec) == 67) {num = 2; den = 3;}
			if (Math.round(dec) == 33) {num = 1; den = 3;}
			if (dec == 0)
				return integer.toString();
			else if (integer == 0)
			{
				if (num <= 1000 && num != 0)
					return (num + '/' + den).toString();
				else
					return (Math.round(number * 100)/100).toString();
			}
			else
			{
				if (num <= 1000 && num != 0)
					return (integer + ' ' + num + '/' + den).toString();
				else
					return (Math.round(number * 100)/100).toString();
			}
			if (integer == 0 && num == 0)
				return '';
		}
		function update_ingrs(reset)
		{
			$("[id^=ingredient_amount]").each(function(){
				if (reset)
				{
					$(this).text(fix_num($(this).attr('id').match(/[0-9]+/), 1));
					new_servings = servings;
					$("#orig_serving_size").css('visibility', 'hidden');
				}
				else
				{
					new_servings = $("#ingr_alter_value").val();
					$(this).text(fix_num($(this).attr('id').match(/[0-9]+/), new_servings / servings));
					$("#orig_serving_size").css('visibility', 'visible');
				}
			});
		}
		function shoot_for_1(ingr, number)
		{
			var old_unit = ingredients[ingr].unit_name;
			if (old_unit == '') return number;
			old_unit = (old_unit.match(/[a-zA-Z]+/)).toString();
			old_unit = old_unit.charAt(0).toUpperCase() + old_unit.substr(1);
			// var list = ['Teaspoon', 'Tablespoon', 'Cup', 'Quart', 'Gallon'];
			var list = ['Gallon', 'Quart', 'Cup', 'Tablespoon', 'Teaspoon'];
			for (var i in list)
			{
				var value = convert(old_unit, number, list[i]);
				var fraction = prettify_fraction(value);
				if (fraction == 0) continue;
				var den = fraction.match(/\/[0-9]+/);
				if (den == null) den = 0;
				if (Math.abs(1 - value) < Math.abs(1 - number) && fraction.indexOf('.') == -1 && den <= 4)
				{
					$("#ingredient_unit_name" + ingr.toString()).text(list[i].charAt(0).toLowerCase() + list[i].substr(1));
					return value;
				}
			}
			// Set to default
			$("#ingredient_unit_name" + ingr.toString()).text(ingredients[ingr].unit_name);
			return number;
		}
		function convert(unit1, unit1_amount, unit2)
		{
			var value;
			// all the units that are in the table as a starting point:
			var covered_units = ['Teaspoon', 'Liter'];
			// all conversions (More can be more accurate or more redundant... it depends)
			var table = {'Teaspoon-Teaspoon' : 1, 'Teaspoon-Tablespoon': 1/3, 'Teaspoon-Dessertspoon': 2, 'Teaspoon-Cup': 1/48, 'Teaspoon-Drop': 120, 'Teaspoon-Pinch': 16, 'Teaspoon-Dash': 8, 'Teaspoon-Smidgen': 32, 'Teaspoon-Handfull': 3/16, 'Teaspoon-Gill': 1/24, 'Teaspoon-Ounce': 1/6, 'Teaspoon-Fluid Ounces': 1/16, 'Teaspoon-Pound': 1/256, 'Teaspoon-Pint': 1/96, 'Teaspoon-Quart': 1/192, 'Teaspoon-Gallon': 1/768, 'Teaspoon-Jigger': 1/3, 'Teaspoon-Peck': 1/1787.36217, 'Teaspoon-Bushel': 1/7149.44868, 'Teaspoon-Firkin': 1/8300.96932, 'Teaspoon-Hogshead': 1/48384, 'Teaspoon-Mililiter': 4.928924902900179, 'Teaspoon-Cubic Centimeter': 4.928924902900179, 'Teaspoon-Cubic Inch': 0.300780827026962, 'Teaspoon-Cubic Foot': 0.0001740631919011878, 'Teaspoon-Liter': 0.004928924902900179, 'Teaspoon-Shot': 1/9, 'Teaspoon-Fifth': 1/153.6, 'Teaspoon-Bucket': 1/3840, 'Liter-Mililiter': 1000, 'Liter-Cubic Centimeter': 1000, 'Liter-Cubic Inch': 61.0237, 'Liter-Cubic Foot': 1/28.3168}
			value = table[unit1 + '-' + unit2];
			if (value == undefined) // not in the list so reverse the search
			{
				value = 1 / table[unit2 + '-' + unit1];
			}
			// still not in the list so search for a man in the middle link like: Tablespoon-Teaspoon Teaspoon-Gallon --> Tablespoon-Gallon
			// (Sometimes not the most accurate due to rounding in the table)
			if (value == undefined || isNaN(value))
			{
				for (i = 0; i < covered_units.length; i++)
				{
					value = 1 / table[covered_units[i] + '-' + unit1];
					value /= 1 /table[covered_units[i] + '-' + unit2];
					if (!isNaN(value))
						break;
				}
			}
			return value * unit1_amount;
		}
		function share_recipe()
		{
			$('body').css('cursor', 'wait');
			$.ajax({
				type: 'POST',
				url: '/user/share_recipe',
				data: {recipe_id: "#{recipe.id}"}, 
				dataType: 'json',
				success: function(data)
				{
					$('body').css('cursor', 'auto');
					$("#share_button").css('cursor', 'pointer');
					$("#share_title").animate({'padding-left': 60}, 350, function(){$("#share_title").animate({'padding-left': 0}, 350)});
					$("#share_title").text('Shared');
				}
				});
		}

	include ../footer